{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swisscom Use Case API",
    "description": "My User Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/record": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get all employees in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        }
      }
    },
    "/record/:id": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get a single record by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    },
    "/record/firstName/{firstName}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get a single record by firstName",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "firstName",
            "in": "path",
            "description": "Employee that we want to get by firstName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    },
    "/record/lastName/{lastName}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get a single record by lastName",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Employee that we want to get by lastName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    },
    "/record/department/{department}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get all records by department",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "department",
            "in": "path",
            "description": "The department",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        }
      }
    },
    "/record/birthdate/{birthdate}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get all records by birthdate",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "birthdate",
            "in": "path",
            "description": "Birthdate",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        }
      }
    },
    "/record/costcenter/{costcenter}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get all records by costcenter",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "costcenter",
            "in": "path",
            "description": "costcenter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        }
      }
    },
    "/record/add": {
      "post": {
        "tags": ["Employee"],
        "summary": "Create a new record",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Employee that we want to create",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Employee is added",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    },
    "/:id": {
      "delete": {
        "tags": ["Employee"],
        "summary": "Delete record with given ID",
        "responses": {
          "200": {
            "description": "record is deleted",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Employee": {
      "required": ["firstName", "lastName", "department", "birthdate", "costCenter"],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "birthdate": {
          "type": "string"
        },
        "costCenter": {
          "type": "string"
        }
      }
    },
    "Employees": {
      "type": "array",
      "$ref": "#/definitions/Employee"
    }
  }
}
